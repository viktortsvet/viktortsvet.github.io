{"version":3,"sources":["components/clock/index.js","components/clock/clock.js","components/post-list-item/index.js","components/post-list-item/postListItem.js","components/post-list/index.js","components/post-list/postList.js","components/post-add-item/index.js","components/post-add-item/postAddItem.js","components/post-header/index.js","components/post-header/postHeader.js","components/search-panel/index.js","components/search-panel/searchPanel.js","App.js","index.js"],"names":["Clock","state","time","componentDidMount","timer","setInterval","tick","componentWillUnmount","clearInterval","setState","Date","toLocaleTimeString","this","React","Component","PostListItem","props","toggleLiked","onDelete","text","like","important","toggleImportant","clazzLike","clazzImportant","className","onClick","PostList","posts","onLiked","onImportant","elements","map","post","index","id","itemProps","key","animation","duration","PostAddItem","newPostText","inputChange","e","target","value","onSubmit","preventDefault","addPost","type","placeholder","onChange","likesFirst","importantFirst","PostHeader","likedPosts","filter","importantPosts","length","SearchPanel","updateSearch","term","onUpdateSearch","App","data","searchValue","maxId","likePoints","findIndex","item","old","newItem","slice","sortImportantFirst","notImportantPosts","searchFilter","items","lengh","toLowerCase","indexOf","sortLikedFirst","notLikedPosts","deleteItem","addItem","trim","dateOfCreation","console","log","shownPosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ff813e8.chunk.js","sourcesContent":["import Clock from './clock';\r\nexport default Clock;","import React from 'react';\r\n\r\nimport '../../styles/clock.css';\r\n\r\nexport default class Clock extends React.Component {\r\n    state = {\r\n        time: null\r\n    };\r\n    componentDidMount = () => {\r\n        this.timer = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n    componentWillUnmount = () => {\r\n        clearInterval(this.timer);\r\n    }\r\n    tick = () => {\r\n        this.setState({\r\n            time: new Date().toLocaleTimeString()\r\n        });\r\n    }\r\n    render() {\r\n        const {time} = this.state;\r\n        return (\r\n            <h1>Время: {time}</h1>\r\n        )\r\n    }\r\n}","import PostListItem from './postListItem';\r\nexport default PostListItem;","import React from 'react';\r\n\r\nimport '../../styles/postListItem.css';\r\n\r\nexport default class PostListItem extends React.Component {\r\n    render() {\r\n        const {toggleLiked, onDelete, text, like, important, toggleImportant} = this.props;\r\n        let clazzLike = \"fa fa-heart\";\r\n        let clazzImportant = 'fa fa-star';\r\n\r\n        if (like) {\r\n            clazzLike += ' liked';\r\n        } else {\r\n            clazzLike = \"fa fa-heart\";\r\n        }\r\n\r\n        if (important) {\r\n            clazzImportant += ' important';\r\n        } else {\r\n            clazzImportant = 'fa fa-star';\r\n        }\r\n\r\n        return (\r\n            <div className=\"post-text d-flex justify-content-between align-items-center\">\r\n                <div onClick={toggleLiked}>{text}</div>\r\n                <div className=\"post-icons\">\r\n                    <i className={clazzLike}></i>\r\n                    <i className={clazzImportant} onClick={toggleImportant}></i>\r\n                    <i className=\"fa fa-trash\" onClick={onDelete}></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import PostList from './postList';\r\nexport default PostList;","import React from 'react';\r\nimport PostListItem from '../post-list-item';\r\nimport ReactWOW from 'react-wow';\r\n\r\nimport '../../styles/postList.css';\r\nimport '../../styles/animate.css';\r\n\r\nconst PostList = ({posts, onDelete, onLiked, onImportant}) => {\r\n    const elements = posts.map((post, index) => {\r\n        const {id, ...itemProps} = post;\r\n        return (\r\n            <ReactWOW key={index} animation='zoomIn' duration=\"1s\">\r\n                <li className=\"list-group-item\">\r\n                    <PostListItem {...itemProps}\r\n                        onDelete={() => onDelete(id)}\r\n                        toggleLiked={() => onLiked(id)}\r\n                        toggleImportant={() => onImportant(id)}\r\n                    />\r\n                </li>\r\n            </ReactWOW>\r\n        )\r\n    });    \r\n    return (\r\n        <ul className=\"list-group\">{elements}</ul>\r\n    )\r\n}\r\n\r\nexport default PostList;","import PostAddItem from './postAddItem';\r\nexport default PostAddItem;","import React from 'react';\r\n\r\nimport '../../styles/postAddItem.css';\r\n\r\nexport default class PostAddItem extends React.Component {\r\n    state = {\r\n        newPostText: ''\r\n    };\r\n    inputChange = (e) => {\r\n        this.setState({\r\n            newPostText: e.target.value\r\n        });\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addPost(this.state.newPostText);\r\n        this.setState({\r\n            newPostText: ''\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <form className=\"bottom-panel\" onSubmit={this.onSubmit}>\r\n                    <input type=\"text\" className=\"form-control\" \r\n                        placeholder=\"Напишите что-нибудь\" \r\n                        onChange={this.inputChange} \r\n                        value={this.state.newPostText}/>\r\n                    <div className=\"form-btns d-flex justify-content-between\">\r\n                        <button type=\"submit\" className=\"btn btn-outline-success\">Добавить</button>\r\n                        <button onClick={this.props.likesFirst} className=\"btn btn-outline-primary\">Сначала понравившиеся</button>\r\n                        <button onClick={this.props.importantFirst} className=\"btnImportant\">Сначала важные</button>\r\n                    </div>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}","import PostHeader from './postHeader';\r\nexport default PostHeader;","import React from 'react';\r\n\r\nimport '../../styles/postHeader.css';\r\n\r\nconst PostHeader = ({posts}) => {\r\n    const likedPosts = posts.filter(post => {\r\n        return post.like;\r\n    });\r\n    const importantPosts = posts.filter(post => {\r\n        return post.important;\r\n    });\r\n    return (\r\n        <div>\r\n            <div className=\"header-quantity\">\r\n                Всего записей: {posts.length}, из них понравилось: {likedPosts.length} <br></br>\r\n                Важных: {importantPosts.length}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostHeader;","import SearchPanel from './searchPanel';\r\nexport default SearchPanel;","import React from 'react';\r\n\r\nimport '../../styles/searchPanel.css';\r\n\r\nexport default class SearchPanel extends React.Component {\r\n    updateSearch = (e) => {\r\n        const term = e.target.value;\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n    render() {\r\n        return (\r\n            <input className=\"form-control searchPanel\" type=\"text\" placeholder=\"Поиск по записям\" onChange={this.updateSearch}/>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Clock from './components/clock';\r\nimport PostList from './components/post-list';\r\nimport PostAddItem from './components/post-add-item';\r\nimport PostHeader from './components/post-header';\r\nimport SearchPanel from './components/search-panel';\r\n\r\nexport default class App extends React.Component {\r\n    state = {\r\n        data: [\r\n            {text: 'Какое хорошее приложение!', id: 1, like: false, important: false},\r\n            {text: 'Уважение разработчику!', id: 2, like: false, important: false},\r\n            {text: 'Виктор крут! Уважение! Красавчик!', id: 3, like: false, important: false},\r\n            {text: 'Мастер!', id: 4, like: false, important: false}\r\n        ],\r\n        searchValue: ''\r\n    };\r\n\r\n    maxId = this.state.data.length + 1;\r\n\r\n\r\n    toggleLiked = (id) => {\r\n        if (this.state.likePoints <= 0) {\r\n            return;\r\n        }\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(item => item.id === id);\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    sortImportantFirst = () => {\r\n        this.setState(({data}) => {\r\n            const importantPosts = data.filter(post => {\r\n                return post.important;\r\n            });\r\n            const notImportantPosts = data.filter(post => {\r\n                return !post.important;\r\n            });\r\n            const importantFirstArr = [...importantPosts, ...notImportantPosts];\r\n            return {\r\n                data: importantFirstArr\r\n            }\r\n        });\r\n    }\r\n\r\n    searchFilter = (items, value) => {\r\n        if (value.lengh === 0) {\r\n            return items;\r\n        }\r\n        return items.filter(item => {\r\n            return item.text.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    onUpdateSearch = (searchValue) => {\r\n        this.setState({searchValue});\r\n    }\r\n\r\n    sortLikedFirst = () => {\r\n        this.setState(({data}) => {\r\n            const likedPosts = data.filter(post => {\r\n                return post.like;\r\n            });\r\n            const notLikedPosts = data.filter(post => {\r\n                return !post.like;\r\n            });\r\n            const likesFirstArr = [...likedPosts, ...notLikedPosts];\r\n            return {\r\n                data: likesFirstArr\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleImportant = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(item => item.id === id);\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({data}) => {\r\n            this.maxId -= 1;\r\n            const index = data.findIndex(item => item.id === id);\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n    addItem = (text) => {\r\n        if (text.trim() === '') {\r\n            return;\r\n        }\r\n        const newItem = {\r\n            text: text,\r\n            id: this.maxId++,\r\n            like: false,\r\n            important: false,\r\n            dateOfCreation: new Date()\r\n        };\r\n        console.log(newItem.dateOfCreation);\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        const {data, searchValue} = this.state;\r\n        const shownPosts = this.searchFilter(data, searchValue);\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <Clock/>\r\n                    <PostHeader posts={data}/>\r\n                    <PostAddItem \r\n                        addPost={this.addItem}\r\n                        likesFirst={this.sortLikedFirst}\r\n                        importantFirst={this.sortImportantFirst}/>\r\n                    <SearchPanel\r\n                        onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PostList \r\n                        posts={shownPosts} \r\n                        onDelete={this.deleteItem} \r\n                        onLiked={this.toggleLiked}\r\n                        onImportant={this.toggleImportant}/>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}