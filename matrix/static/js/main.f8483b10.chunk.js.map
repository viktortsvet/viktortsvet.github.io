{"version":3,"sources":["random.js","square.js","paintedMatrix.js","main.js","index.js"],"names":["getRandomInt","max","Math","floor","random","Square","clazz","col","className","PaintedMatrix","matrix","map","row","n","rows","key","i","cols","Matrix","state","board","painted","createBoard","setState","newArr","j","push","removePaint","onRowsInputChange","e","target","value","localStorage","setItem","onColsInputChange","onPaint","getItem","this","result","Container","TextField","placeholder","type","onChange","Button","variant","color","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8483b10.chunk.js","sourcesContent":["function getRandomInt(max = 2) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n};\r\n\r\nexport {getRandomInt};","import React from 'react';\r\n\r\nconst Square = ({clazz, col}) => {\r\n    return (\r\n        <div className={clazz}>{col}</div>\r\n    )\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\n\r\nimport './square.css';\r\n\r\nconst PaintedMatrix = ({matrix, clazz}) => {\r\n    const elements = matrix.map((row, n, rows) => {\r\n        return (\r\n            <div key={n}>\r\n                {\r\n                    row.map((col, i, cols) => {\r\n\r\n                        //проверка по вертикали\r\n\r\n                        if (rows[n-1]) {\r\n                            if ((col === 1 && rows[n-1][i] === 1)) {\r\n                                clazz += ' active';\r\n                            } else {\r\n                                clazz = 'matrixElem';\r\n                            }\r\n                        }\r\n\r\n                        if (rows[n+1]) {\r\n                            if (col === 1 && rows[n+1][i] === 1) {\r\n                                clazz = 'matrixElem';\r\n                                clazz += ' active';\r\n                            } \r\n                            if ((col === 1 && rows[n+1][i] === 0) && ((cols[i+1] === 1) || (cols[i-1] === 1))) {\r\n                                clazz = 'matrixElem';\r\n                                clazz += ' active';\r\n                            } \r\n                        }\r\n\r\n                        //проверка по горизонтали\r\n\r\n                        if (cols[i+1] || cols[i-1]) {\r\n                            if (col === 1 && ((cols[i+1] === 1) || (cols[i-1] === 1))) {\r\n                                clazz = 'matrixElem';\r\n                                clazz += ' active';\r\n                            } else {\r\n                                clazz = 'matrixElem';\r\n                            }\r\n                        }\r\n\r\n                        return (\r\n                            <div key={i} className={clazz}>\r\n                                {col}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    });\r\n    return (\r\n        [elements]\r\n    )\r\n}\r\n\r\nexport default PaintedMatrix;","import React, {Component} from 'react';\r\nimport {getRandomInt} from './random';\r\nimport Square from './square';\r\nimport PaintedMatrix from './paintedMatrix';\r\nimport {Button, TextField, Container} from '@material-ui/core';\r\n\r\nimport './style.css';\r\nimport './media.css';\r\n\r\nexport default class Matrix extends Component {\r\n    \r\n    state = {\r\n        board: [],\r\n        rows: 0,\r\n        cols: 0,\r\n        painted: false\r\n    };\r\n\r\n    clazz = 'matrixElem';\r\n\r\n    createBoard = (rows, cols) => {\r\n        this.setState(() => {\r\n            let newArr = [];\r\n            for (let i = 0; i < rows; i++) {\r\n                let row = [];\r\n                for (let j = 0; j < cols; j++) {\r\n                    row.push(getRandomInt());\r\n                }\r\n                newArr.push(row);\r\n            }\r\n            return {\r\n                board: newArr\r\n            }\r\n        });\r\n        this.removePaint();\r\n    }\r\n\r\n    onRowsInputChange = (e) => {\r\n        this.setState({rows: e.target.value});\r\n        localStorage.setItem('rows', e.target.value);\r\n    }\r\n\r\n    onColsInputChange = (e) => {\r\n        this.setState({cols: e.target.value});\r\n        localStorage.setItem('cols', e.target.value);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const rows = localStorage.getItem('rows'),\r\n            cols = localStorage.getItem('cols');\r\n        this.setState({rows, cols});\r\n    }\r\n\r\n    removePaint = () => {\r\n        this.setState({painted: false});\r\n    }\r\n\r\n    onPaint = () => {\r\n        this.setState({painted: true});\r\n    }\r\n\r\n    render() {\r\n        const {board, rows, cols, painted} = this.state;\r\n        const result = board.map((row, i) => {\r\n            return (\r\n                <div key={i}>\r\n                    {\r\n                        row.map((col, i) => {\r\n                            return (\r\n                                <Square clazz={this.clazz} key={i} col={col}/>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            )\r\n        });\r\n        return (\r\n            <Container className=\"cont\">\r\n                <div className=\"inputs\">\r\n                    <TextField placeholder=\"Количество строк\" value={rows} type=\"number\" className=\"rows\" onChange={this.onRowsInputChange}></TextField>\r\n                    <TextField placeholder=\"Количество столбцов\" value={cols} type=\"number\" onChange={this.onColsInputChange}></TextField>\r\n                    <Button className=\"btn\" variant=\"outlined\" color=\"primary\" onClick={() => this.createBoard(rows, cols)}>Создать</Button>\r\n                    <Button className=\"btn\" variant=\"outlined\" color=\"secondary\" onClick={this.onPaint}>Раскрасить</Button>\r\n                </div>\r\n                <div className=\"matrix\">\r\n                    {painted ? <PaintedMatrix matrix={board} clazz={this.clazz}/> : result}\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Matrix from './main';\r\n\r\nReactDOM.render(\r\n    <Matrix/>,\r\n    document.getElementById('root')\r\n); "],"sourceRoot":""}