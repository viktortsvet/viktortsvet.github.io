{"version":3,"sources":["components/post-item/postItem.js","actions/index.js","components/post-item/index.js","components/post-list/index.js","components/post-list/postList.js","components/search-item/index.js","components/search-item/searchItem.js","components/header/header.js","components/header/index.js","components/app/app.js","components/app/index.js","reducer/index.js","index.js"],"names":["PostItem","this","props","post","removePost","onToggleImportant","clazz","important","className","text","onClick","id","Component","mapDispatchToProps","type","connect","undefined","PostList","shownPosts","posts","map","index","key","SearchItem","updateSearch","e","term","target","value","searchPosts","placeholder","onChange","Header","state","inputValue","onInputChange","setState","onAddPost","trim","addPost","importantPosts","filter","length","searchValue","App","onFilterPosts","items","item","toLowerCase","indexOf","searchInputValue","visiblePosts","initialState","maxId","reducer","action","newPost","old","newArr","copyRemove","findIndex","resArr","slice","copyImportant","impIndex","oldPost","changedPost","impArr","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a1eeaf3.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {removePost, onToggleImportant} from '../../actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass PostItem extends Component {\r\n    render() {\r\n        const {post, removePost, onToggleImportant} = this.props;\r\n        let clazz = 'fa fa-star';\r\n        if (post.important) {\r\n            clazz += ' important';\r\n        }\r\n        return (\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n                <div className=\"postItem-text\">{post.text}</div>\r\n                <i onClick={() => onToggleImportant(post.id)} className={clazz}></i>\r\n                <button onClick={() => removePost(post.id)} \r\n                    className=\"btn btn-outline-danger\">Удалить запись</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    removePost,\r\n    onToggleImportant\r\n};\r\n\r\nexport default connect(undefined, mapDispatchToProps) (PostItem);","const addPost = (post) => {\r\n    return {\r\n        type: 'ADD_POST',\r\n        post\r\n    }\r\n};\r\n\r\nconst removePost = (id) => {\r\n    return {\r\n        type: 'REMOVE_POST',\r\n        id\r\n    }\r\n};\r\n\r\nconst onToggleImportant = (id) => {\r\n    return {\r\n        type: 'TOGGLE_IMPORTANT',\r\n        id\r\n    }\r\n};\r\n\r\nconst searchPosts = (searchValue) => {\r\n    return {\r\n        type: 'SEARCH_POSTS',\r\n        searchValue\r\n    }\r\n};\r\n\r\nexport {\r\n    addPost,\r\n    removePost,\r\n    onToggleImportant,\r\n    searchPosts\r\n};","import PostItem from './postItem';\r\nexport default PostItem;","import PostList from './postList';\r\nexport default PostList;","import React, {Component} from 'react';\r\nimport PostItem from '../post-item';\r\n\r\nexport default class PostList extends Component {\r\n    render() {\r\n        const {posts} = this.props;\r\n        const shownPosts = posts.map((post, index) => {\r\n            return (\r\n                <li className=\"list-group-item animated\" key={index}><PostItem post={post}/></li>\r\n            )\r\n        });\r\n        return (\r\n            <ul className=\"list-group\">{shownPosts}</ul>\r\n        )\r\n    }\r\n}","import SearchItem from './searchItem';\r\nexport default SearchItem;","import React, {Component} from 'react';\r\n\r\n\r\nexport default class SearchItem extends Component {\r\n\r\n    updateSearch = (e) => {\r\n        const term = e.target.value;\r\n        this.props.searchPosts(term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input type=\"text\" className=\"form form-control\" \r\n                placeholder=\"Поиск по записям\" \r\n                onChange={this.updateSearch}/>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {addPost, searchPosts} from '../../actions/index';\r\nimport {connect} from 'react-redux';\r\nimport SearchItem from '../search-item';\r\n\r\nclass Header extends Component {\r\n\r\n    state = {\r\n        inputValue: ''\r\n    };\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            inputValue: e.target.value\r\n        });\r\n    }\r\n\r\n    onAddPost = (value) => {\r\n        this.setState({inputValue: ''});\r\n        if (value.trim() === '') {\r\n            return;\r\n        }\r\n        this.props.addPost(value);\r\n    }\r\n\r\n    render() {\r\n        const {inputValue} = this.state;\r\n        const {posts} = this.props;\r\n        const importantPosts = posts.filter(post => post.important);\r\n        return (\r\n            <>\r\n                <h1 className=\"header\">Записи</h1>\r\n                <input className=\"form form-control\" \r\n                    onChange={this.onInputChange} \r\n                    value={inputValue} \r\n                    placeholder=\"Напишите что-нибудь...\"/>\r\n                <button onClick={() => this.onAddPost(inputValue)} \r\n                    className=\"btn btn-outline-success\">Добавить</button>\r\n                <div>Количество записей: {posts.length} из них важных записей: {importantPosts.length}</div>\r\n                <SearchItem searchPosts={this.props.searchPosts}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.posts\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    addPost,\r\n    searchPosts\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Header);","import Header from './header';\r\nexport default Header;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PostList from '../post-list';\r\nimport Header from '../header';\r\n\r\nimport '../../styles/style.sass';\r\n\r\nclass App extends Component {\r\n\r\n    onFilterPosts = (items, value) => {\r\n        if (value.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter(item => {\r\n            return item.text.toLowerCase().indexOf(value.toLowerCase().trim()) > -1 \r\n        });\r\n    };\r\n \r\n    render() {\r\n        const {posts, searchInputValue} = this.props;\r\n        const visiblePosts = this.onFilterPosts(posts, searchInputValue);\r\n        return (\r\n            <div className=\"container\">\r\n                <Header/>\r\n                <PostList posts={visiblePosts}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.posts,\r\n        searchInputValue: state.searchInputValue\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, undefined) (App);","import App from './app';\r\nexport default App;","const initialState = {\r\n    posts: [\r\n        {text: 'Привет! Как дела?', id: 1, important: false},\r\n        {text: 'Пока!', id: 2, important: false}\r\n    ],\r\n    maxId: 3,\r\n    searchInputValue: ''\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_POST':\r\n            const newPost = {\r\n                text: action.post,\r\n                id: state.maxId,\r\n                important: false\r\n            };\r\n            const old = state.posts.map(post => {\r\n                return post;\r\n            });\r\n            const newArr = [...old, newPost];\r\n            return {\r\n                ...state,\r\n                posts: newArr,\r\n                maxId: state.maxId += 1\r\n            }\r\n        case 'REMOVE_POST':\r\n            const copyRemove = state.posts.map(post => post);\r\n            const index = copyRemove.findIndex(post => post.id === action.id);\r\n            const resArr = [...copyRemove.slice(0, index), ...copyRemove.slice(index + 1)];\r\n            return {\r\n                ...state,\r\n                posts: resArr\r\n            }\r\n        case 'TOGGLE_IMPORTANT':\r\n            const copyImportant = state.posts.map(post => post);\r\n            const impIndex = copyImportant.findIndex(post => post.id === action.id);\r\n            const oldPost = copyImportant[impIndex];\r\n            const changedPost = {...oldPost, important: !oldPost.important};\r\n            const impArr = [...copyImportant.slice(0, impIndex), changedPost, ...copyImportant.slice(impIndex + 1)];\r\n            return {\r\n                ...state,\r\n                posts: impArr\r\n            }\r\n        case 'SEARCH_POSTS':\r\n            return {\r\n                ...state,\r\n                searchInputValue: action.searchValue\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport App from './components/app';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}